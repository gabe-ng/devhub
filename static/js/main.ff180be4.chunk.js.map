{"version":3,"sources":["components/Navbar.js","models/Jobs.js","components/Jobs/JobSearch.js","components/Jobs/JobFeed.js","containers/Jobs.js","components/Articles/ArticleSearch.js","components/Articles/ArticleFeed.js","containers/Articles.js","containers/Favorites.js","App.js","serviceWorker.js","index.js"],"names":["Nav","react_default","a","createElement","className","NavLink","to","react_icons_kit","icon","star","Component","JobModel","title","location","encodeURIComponent","trim","githubApi","concat","url","axios","get","JobSearch","state","handleChange","e","_this","setState","Object","defineProperty","target","name","value","handleSearch","searchGithub","then","res","console","log","props","saveResults","data","id","search","type","placeholder","aria-label","onChange","this","mapPin","onClick","JobFeed","jobs","map","job","href","rel","style","backgroundColor","minHeight","Jobs","jobResults","results","JobSearch_JobSearch","JobFeed_JobFeed","ArticleSearch","aria-describedby","articles","article","class","height","Articles","articleResults","ArticleSearch_ArticleSearch","ArticleFeed_JobFeed","Favorites","App","Navbar_Nav","Switch","Route","path","exact","render","containers_Favorites","containers_Articles","containers_Jobs","Boolean","window","hostname","match","ReactDOM","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ff180be4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Icon } from \"react-icons-kit\";\nimport { star } from 'react-icons-kit/fa/star'\n\nexport default class Nav extends Component {\n  render() {\n    return <div className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\n        <h5 className=\"my-0 mr-md-auto font-weight-normal\">DEV HUB.</h5>\n        <nav className=\"my-2 my-md-0 mr-md-3\">\n          <NavLink to=\"/favorites\" className=\"p-2 text-dark\">\n            <Icon icon={star} />\n          </NavLink>\n          <NavLink to=\"/\" className=\"p-2 text-dark\">\n            Jobs\n          </NavLink>\n          <NavLink to=\"/articles\" className=\"p-2 text-dark\">\n            Articles\n          </NavLink>\n        </nav>\n      </div>;\n  }\n}\n","import axios from \"axios\";\n\nexport default class JobModel {\n\n    static searchGithub(title, location) {\n\n    // encode\n    title = encodeURIComponent(title.trim());\n    location = encodeURIComponent(location.trim());\n      \n    let githubApi = `https://jobs.github.com/positions.json?description=${title}&location=${location}`;\n    let url = 'https://jsonp.afeld.me/?url=' + encodeURIComponent(githubApi);\n\n    let request = axios.get(url);\n\n    return request;\n    }\n\n    // static searchGlassdoor(title, location) {\n    //     let url = \"\";\n    //     let request = axios.get(url);\n\n    //     return request;\n    // }\n}","import React, { Component } from \"react\";\nimport { Icon } from \"react-icons-kit\";\nimport { search } from 'react-icons-kit/fa/search';\nimport { mapPin } from 'react-icons-kit/fa/mapPin';\nimport JobModel from \"../../models/Jobs\";\n\nexport default class JobSearch extends Component {\n  state = {\n    title: '',\n    location: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleSearch = () => {\n    if(!this.state.title || this.state.title.trim() === '') {\n          return;\n      }\n    if(!this.state.location || this.state.location.trim() === '') {\n          return;\n      }\n\n    JobModel.searchGithub(this.state.title, this.state.location)\n      .then(res => {\n        console.log(res);\n        this.props.saveResults(res.data);\n      })\n  }\n\n  render() {\n    return <div className=\"container mt-5 w-75\">\n        <div className=\"input-group mb-2\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\" id=\"basic-addon1\">\n              <Icon icon={search} />\n            </span>\n          </div>\n          <input type=\"text\" className=\"form-control mr-1 w-50\" placeholder=\"Job Title\" aria-label=\"Job Title\" name=\"title\" onChange={this.handleChange} />\n          <div className=\"input-group-prepend ml-1\">\n            <span className=\"input-group-text\" id=\"basic-addon1\">\n              <Icon icon={mapPin} />\n            </span>\n          </div>\n          <input type=\"text\" className=\"form-control w-25\" placeholder=\"City\" aria-label=\"City\" name=\"location\" onChange={this.handleChange} />\n          <button type=\"button\" className=\"btn btn-success ml-2\" onClick={this.handleSearch}>Search</button>\n        </div>\n        <p className=\"text-center\">Find your next career with Dev Hub.</p>\n      </div>;\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class JobFeed extends Component {\n  render() {\n    const feedStyle = {\n      backgroundColor: \"whitesmoke\",\n      minHeight: \"80vh\"\n    };\n\n    let jobs = this.props.jobs.map(job => (\n      <li className=\"list-group-item\">\n      <p><a href={`${job.url}`} target=\"_blank\" rel=\"noopener noreferrer\">{job.title}</a></p>\n      <p>{job.location}, {job.type}</p></li>\n    ));\n\n    return (\n      <div className=\"container-fluid\" style={feedStyle}>\n        <div className=\"container pt-3\">\n            <p className=\"ml-3 font-weight-bold\">Recent Searches</p>\n            <ul className=\"list-group pb-5\">\n                {jobs}\n            </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Search from \"../components/Jobs/JobSearch\";\nimport Feed from \"../components/Jobs/JobFeed\";\n\nclass Jobs extends Component {\n  state = {\n    jobResults: []\n  };\n\n  handleSearch = results => {\n    this.setState({ jobResults: results})\n  }\n\n  render() {\n    return (\n      <div>\n        <Search saveResults={this.handleSearch}/>\n        <Feed jobs={this.state.jobResults} />\n      </div>\n    );\n  }\n}\n\nexport default Jobs;\n","import React, { Component } from \"react\";\nimport { Icon } from \"react-icons-kit\";\nimport { search } from 'react-icons-kit/fa/search';\n\nexport default class ArticleSearch extends Component {\n    state = {};\n\n    render() {\n        return <div className=\"container mt-5 w-50\">\n            <div className=\"input-group mb-2\">\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"basic-addon1\">\n                        <Icon icon={search} />\n                    </span>\n                </div>\n                <input type=\"text\" className=\"form-control mr-1 w-25\" placeholder=\"Topic\" aria-label=\"Job Title\" aria-describedby=\"basic-addon1\" />                \n                <button type=\"button\" className=\"btn btn-success ml-2\">Search</button>\n            </div>\n            <p className=\"text-center\">Learn about recent news with Dev Hub.</p>\n        </div>;\n    }\n}\n","import React, { Component } from \"react\";\n\nexport default class JobFeed extends Component {\n  render() {\n    const feedStyle = {\n      backgroundColor: \"whitesmoke\",\n      height: \"80vh\"\n    };\n\n    let articles = this.props.articles.map(article => (\n      <li class=\"list-group-item\">{article.name}</li>\n    ));\n\n    return (\n      <div className=\"container-fluid\" style={feedStyle}>\n        <div className=\"container pt-3\">\n            <p className=\"ml-3 font-weight-bold\">Recent Searches</p>\n            <ul class=\"list-group\">\n                {articles}\n            </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Search from \"../components/Articles/ArticleSearch\";\nimport Feed from \"../components/Articles/ArticleFeed\";\n\nclass Articles extends Component {\n  state = {\n    articleResults: [\n      {\n        name: \"Article1\"\n      },\n      {\n        name: \"Article2\"\n      },\n      {\n        name: \"Article3\"\n      }\n    ]\n  };\n\n  render() {\n    return (\n      <div>\n        <Search />\n        <Feed articles={this.state.articleResults}/>\n      </div>\n    );\n  }\n}\n\nexport default Articles;\n","import React, { Component } from \"react\";\n\nclass Favorites extends Component {\n  render() {\n    const savedContainer = {\n      backgroundColor: \"whitesmoke\",\n      height: \"84vh\"\n    }\n\n    return <div>\n        <div className=\"container-fluid\">\n          <h3 className=\"text-center pt-3 pb-3\">Favorites</h3>\n        </div>\n        <div className=\"container-fluid\" style={savedContainer}>\n          <div className=\"container pt-4\">\n            <h6 className=\"pl-4 pb-2 font-weight-bold\">Starred Jobs</h6>\n            <ul class=\"list-group\">\n              <li class=\"list-group-item\">test</li>\n              <li class=\"list-group-item\">test</li>\n              <li class=\"list-group-item\">test</li>\n            </ul>\n            <h6 className=\"pl-4 pt-5 pb-2 font-weight-bold\">Starred Articles</h6>\n            <ul class=\"list-group\">\n              <li class=\"list-group-item\">test</li>\n              <li class=\"list-group-item\">test</li>\n              <li class=\"list-group-item\">test</li>\n            </ul>\n          </div>\n        </div>\n      </div>;\n  }\n}\n\nexport default Favorites;\n","import React, { Component } from 'react';\nimport { Switch, Route} from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar\";\nimport Jobs from \"./containers/Jobs\";\nimport Articles from \"./containers/Articles\";\nimport Favorites from \"./containers/Favorites\";\n\nclass App extends Component {\n  render() {\n    return <div>\n        <Navbar />\n        <Switch>\n          <Route path=\"/favorites\" exact render={props => <Favorites {...props} />} />\n          <Route path=\"/articles\" exact render={props => <Articles {...props} />} />\n          <Route path=\"/\" exact render={props => <Jobs {...props} />} />\n        </Switch>\n      </div>;\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from './App';\nimport \"./index.css\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}